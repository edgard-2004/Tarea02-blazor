@page "/Ejercicio34"

<h3>Este programa encuentra la posición del número entero con mayor cantidad de dígitos en un vector de 10 posiciones.</h3>

<div class="m-3">
    <label for="numero">Ingresa un número: </label>
    <input type="number" @bind="numeroInput" id="numero" />
</div>

<div class="m-3">
    <button @onclick="AgregarNumero">Agregar Número</button>
    <button @onclick="EncontrarMayorCantidadDigitos">Encontrar Mayor Cantidad de Dígitos</button>
</div>

@if (numeros.Count > 0)
{
        <h4>Números Ingresados:</h4>
        <ul>
        @foreach (var number in numeros)
        {
                    <li>@number</li>
        }
        </ul>
}

@if (posicionMayorDigitos >= 0)
{
        <p>La posición del número con mayor cantidad de dígitos es: @posicionMayorDigitos.</p>
}

@code {
    private List<int> numeros = new List<int>();
    private int numeroInput;
    private int posicionMayorDigitos = -1; 

    private void AgregarNumero()
    {
        if (numeros.Count < 10)
        {
            numeros.Add(numeroInput);
            numeroInput = 0;
        }
    }

    private void EncontrarMayorCantidadDigitos()
    {
        if (numeros.Count == 10)
        {
            posicionMayorDigitos = ObtenerPosicionMayorDigitos(numeros.ToArray());
        }
        else
        {
            posicionMayorDigitos = -1;
        }
    }

    private int ObtenerPosicionMayorDigitos(int[] arreglo)
    {
        int maxDigitos = 0;
        int posicion = -1;

        for (int i = 0; i < arreglo.Length; i++)
        {
            int cantidadDigitos = ObtenerCantidadDigitos(arreglo[i]);

            if (cantidadDigitos > maxDigitos)
            {
                maxDigitos = cantidadDigitos;
                posicion = i; 
            }
        }

        return posicion; 
    }

    private int ObtenerCantidadDigitos(int numero)
    {
        return numero.ToString().Length; 
    }
}